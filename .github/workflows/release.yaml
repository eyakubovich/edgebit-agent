name: Release

on:
  push:
    tags:
      - v*

permissions:
  id-token: write
  contents: write

jobs:
  sign-tag:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up gitsign
        uses: chainguard-dev/actions/setup-gitsign@main

      - name: Sign the tag
        shell: bash
        run: |
          # Make sure the tag is on main branch
          git merge-base --is-ancestor ${{ github.ref_name }} main
          git tag -s -f -m "${{ github.ref_name }}" ${{ github.ref_name }}
          git push -f origin ${{ github.ref_name }}

  release-binaries:
    needs: sign-tag

    strategy:
      matrix:
        runs-on: [buildjet-4vcpu-ubuntu-2204, buildjet-4vcpu-ubuntu-2204-arm]

    runs-on: ${{matrix.runs-on}}

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::970625735569:role/GitHubActionsECRPush

      - name: Configure AWS Docker Auth
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Building builder image
        uses: docker/build-push-action@v3
        with:
          context: build/
          push: false
          tags: agent-builder:latest

      - name: Generate Image Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            public.ecr.aws/edgebit/edgebit-agent
          tags: |
            type=sha,
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}

      - name: Building agent
        uses: docker/build-push-action@v3
        with:
          push: false
          target: build
          tags: edgebit-agent-build

      - name: Building and pushing agent container
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Copying out package artifacts
        shell: bash
        run: |
          docker run --rm -i -v $(pwd)/dist/:/mnt edgebit-agent-build /bin/bash -c "cp -R /root/src/dist/output /mnt"

      - name: Creating a draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: |
            dist/output/edgebit-agent*
